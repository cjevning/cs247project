<!DOCTYPE html>
<html>
<head>
<title>Message Your Match!</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/bootstrap-theme.min.css" rel="stylesheet">
  <link href="/css/home.css" rel="stylesheet">
  <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery.js"></script>
  <script src="/js/bootstrap.min.js"></script>
  <script src="http://www.WebRTC-Experiment.com/RecordRTC.js"></script>
  <script src='/js/MediaStreamRecorder.js'></script>
  <script src='https://cdn.firebase.com/js/client/1.0.6/firebase.js'></script>
</head>
<body>
  <div id="switchScreen" class="switch" >
    <button type="button" id="backbutton" onclick="goBack();"> Back </button>
  <h1 id="messagesText" class="">SetEmUp</h1>


</div>
 
    

  <script>
  var username;

  function goBack(){
    var path = window.location.pathname;
    var splits = path.split("/");
    var loggedIn = splits[splits.length-1];
    window.location.href = "/match/user=" + loggedIn;
  }
  function statusChangeCallback(response) {
    //console.log('statusChangeCallback');
    //console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }
   window.fbAsyncInit = function() {
  FB.init({
    appId      : '284519508381624',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.0' // use version 2.0
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
  
  

  function testAPI() {
  var x = document.getElementById("matchList").innerHTML;
    var splits = x.split(/[|]+/g)
    var len = splits.length;
    for (var i = 1; i < len-1; i+=2) {
      var obj = {"u1": splits[i]}
      console.log(obj.u1);
      FB.api('/' + obj.u1 + '/', function (response) {
        FB.api('/'+response.id+'/picture?type=large', function (resp) {  
          document.getElementById(response.id+"-img").src = "" + resp.data.url;
          document.getElementById(response.id+"-name").innerHTML=response.name;
        });
      });
    }
  }
  </script>
  <div class="bigContainer">
  <h2 class="centertext">Your Matches!</h2>
  <div class="matchListContainer">
    <div id="matchList" class="ourhidden">
    {{#each matches}}
      |{{match}}|
      {{/each}}
    </div>
    <table class="table table-striped">  
      {{#each matches}}
      <tr id="{{match}}" onclick="gotomessage('{{match}}')" class="nothidden matchlink">
        <td id ="{{match}}-picture" class="quarter"><img id="{{match}}-img" class="matchImage" src=""></img></td>
        <td id ="{{match}}-name" class="half"></td>
        <td id ="{{match}}-heart" class="quarter"><i id="{{match}}-hearticon"></i></td>
      </tr>
      {{/each}}
    </table>
  
    <!-- <div id="{{match}}" onclick="gotomessage('{{match}}')" class="nothidden matchlink">

    </div> -->

  <script type="text/javascript">
    function gotomessage(id) {
      var path = window.location.pathname;
      var splits = path.split("/");
      var loggedIn = splits[splits.length-1];
      var url = "/message/goodorder/" + loggedIn + "/" + id;
      var good = $.get(url, sendoff);
    }

    function sendoff(result) {
      var good = result['good'];
      var user = result['user'];
      var match = result['id'];
      var url = "/message/";
      if (good) {
        url += user + "/" + match;
      }
      else {
        url += match + "/" + user;
      }
      window.location.href = url;
    }
  </script>  
  
  

<div id="messageList" class="ourhidden">
  {{#each messages}}
     
  |{{from}}|
  <script>
    if (document.getElementById('{{from}}') != null) {
      document.getElementById('{{from}}-hearticon').setAttribute("class", "fa fa-heart-o")
    }
  </script>
{{/each}}
  </div>
</div>
</div>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
<title>Message Your Match!</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/bootstrap-theme.min.css" rel="stylesheet">
  <link href="/css/home.css" rel="stylesheet">
  <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery.js"></script>
  <script src="/js/bootstrap.min.js"></script>
  <script src="http://www.WebRTC-Experiment.com/RecordRTC.js"></script>
  <script src='https://cdn.firebase.com/js/client/1.0.6/firebase.js'></script>

</head>
<body>
	


<script>
  var username;
  var currentUserID;

  function goBack(){
          window.location.href = "/message/all/" + currentUserID;
  }

function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }
   window.fbAsyncInit = function() {
  FB.init({
    appId      : '284519508381624',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.0' // use version 2.0
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
  
  var pathname = window.location.pathname;
  var splits = pathname.split("&");
  var my_match_name;

  function testAPI() {
    var recs = document.getElementById("recommenders").innerHTML;
    var pathname = window.location.pathname;
    var splits = pathname.split("/");
    var user = splits[splits.length-2];
    var match = splits[splits.length-1];

    FB.api('/' + match + '/', function (response) {
      my_match_name = response.name;
      FB.api('/me/', function (response1) {
        currentUserID = response1.id;
        username = response1.name;
        if(currentUserID == response.id){
          FB.api('/' + user + '/', function (response2) {
            my_match_name = response2.name;
            $("#match span").html(recs + " have matched you with " + my_match_name + "!");
          });
        } else {
            $("#match span").html(recs + " have matched you with " + my_match_name + "!");
        }


        


        ///////////////////////////




var fb_instance;
var fb_instance_stream;
var ready = 0;

var my_color;
var fb_instance_top;

function GetUrlValue(VarSearch){
    var SearchString = window.location.search.substring(1);
    var VariableArray = SearchString.split('&');
    for(var i = 0; i < VariableArray.length; i++){
        var KeyValuePair = VariableArray[i].split('=');
        if(KeyValuePair[0] == VarSearch){
            return KeyValuePair[1];
        }
    }
}

$(document).ready(function(){
    connect_to_chat_firebase();
    connect_webcam();
    document.getElementById("recordBtn").onclick=function() {
      if (ready == 2) {
        record_audio_and_video();
      }
      $("#recordBtn").hide();
      $("#stopButton").show();
    };
    $("#stopButton").click(function() {
      $("#stopButton").hide();
      var videoBase64;
      var savedVideoURL;
      recordRTC_Video.stopRecording(function(videoURL) {
        savedVideoURL = videoURL;
        datauri_to_blob(videoURL,function(blob){
          blob_to_base64(blob,function(base64){
            videoBase64 = base64;
            //fb_instance_stream.push({m:username, v:base64, c: my_color, r: 0});
          });
        });
      });
      recordRTC_Audio.stopRecording(function(audioURL) {
        datauri_to_blob(audioURL,function(blob){
          blob_to_base64(blob,function(base64){
            var approvalDiv = document.createElement('div');
            approvalDiv.setAttribute("class", "video_approve");
            approvalDiv.setAttribute("id", "videoplaybackdiv");
            $('body').append(approvalDiv);
            $('#videoplaybackdiv').append("<video id='videoplayback' src='"+savedVideoURL+"'></video>");
            $('#videoplaybackdiv').append("<audio id='audioplayback' src='"+audioURL+"'></audio>");
            var approvalPlayButton = document.createElement("button");
            approvalPlayButton.setAttribute("id", "approval_play");
            approvalPlayButton.innerHTML = "Play";

            approvalPlayButton.onclick = function() {
              setTimeout(function(){
                document.getElementById("videoplayback").play();
                setTimeout(function(){
                  document.getElementById("audioplayback").play(); // delay 500 seconds for audio, it worked well on my machine
                },620);
              },500);
            }

            $('#videoplaybackdiv').append(approvalPlayButton);

            var approveButton = document.createElement("button");
            approveButton.innerHTML = "Approve";
            //approveButton.setAttribute("id", "approveButton");
            approveButton.onclick = function() {
              fb_instance_stream.push({m:username, v:videoBase64, a:base64, c: my_color, r: 0, '.priority':0});
              $('#videoplaybackdiv').remove();
              $("#recordBtn").show();
            }
            $('#videoplaybackdiv').append(approveButton);

            var rejectButton = document.createElement("button");
            rejectButton.innerHTML = "Reject";
            rejectButton.onclick = function() {
              $('#videoplaybackdiv').remove();
              $("#recordBtn").show();
            }
            $('#videoplaybackdiv').append(rejectButton);
            //add to onclick for accept
            //fb_instance_stream.push({m:username, v:videoBase64, a:base64, c: my_color, r: 0});
          });
        });
      });
    });
  });

function connect_to_chat_firebase(){
    /* Include your Firebase link here!*/
    fb_instance = new Firebase("https://radiant-fire-2543.firebaseio.com");

    // generate new chatroom id or use existing id
    var url_segments = document.location.href.split("/#");
    if(url_segments[1]){
      fb_chat_room_id = url_segments[1];
    }else{
      fb_chat_room_id = Math.random().toString(36).substring(7);
    }
    //display_msg({m:"Share this url with your friend to join this chat: "+ document.location.origin+"/#"+fb_chat_room_id,c:"red"});
    //display_msg({m:"Type lol, :), or :( to share a sequence of three short videos. Plan accordingly!",c:"red"})

    // set up variables to access firebase data structure
    
    var fb_new_chat_room = fb_instance.child('chatrooms').child(fb_chat_room_id);
    var fb_instance_users = fb_new_chat_room.child('users');
    fb_instance_stream = fb_new_chat_room.child('stream');
    fb_instance_top = fb_instance_stream.startAt(-1).limit(3);
    my_color = "#"+((1<<24)*Math.random()|0).toString(16);

    // listen to events
   /* fb_instance_users.on("child_added",function(snapshot){
      var id = snapshot.name();
      display_msg(id, {m:snapshot.val().name+" joined the room",c: snapshot.val().c});
    }); */
    fb_instance_stream.on("child_added",function(snapshot){
      var id = snapshot.name();
      display_msg(id, snapshot.val(), "conversation");
    });

    // fb_instance_stream.on("child_changed", function(snapshot, prevChildName){
    //   var ratingString = snapshot.val().r;
    //   var isNeg = false;
    //   if (ratingString.charAt(0) == '-') {
    //     ratingString = ratingString.substring(1);
    //     var isNeg = true;
    //   }
    //   console.log("ratingString is: " + ratingString);
    //   var indexOfHyphen = ratingString.indexOf("-");
    //   var id = ratingString.substring(indexOfHyphen);
    //   console.log("id in child changed function is: " + id);
    //   var rating = ratingString.substring(0, indexOfHyphen);
    //   console.log("rating for this id is: " + rating);
    //   if (isNeg === true) rating = "-" + rating;
    //   document.getElementById(id).innerHTML = rating;
    // });


    // block until username is answered

    fb_instance_users.push({ name: username,c: my_color});

    // bind submission box
    var text;
    $("#submission input").keydown(function( event ) {
      text = $(this).val();
      if (event.which == 13) {
        fb_instance_stream.push({m:username+": " +text, c: my_color});
        $(this).val("");
      }
      });

    };

function connect_webcam() {
  // use a counter to make sure audoi and video are all ready

  // record audio
  navigator.getUserMedia({audio: true}, function(mediaStream) {
    $("#status").html("waiting..");
    window.recordRTC_Audio = RecordRTC(mediaStream);
    ready += 1;
  },function(failure){
    console.log(failure);
  });

  // record video
  navigator.getUserMedia({video: true}, function(mediaStream) {
    $("#status").html("waiting..");
    window.recordRTC_Video = RecordRTC(mediaStream,{type:"video"});
    ready += 1;

  var webcam_stream = document.getElementById('webcam_stream');
  var video = document.createElement('video');
  webcam_stream.innerHTML = "";
  // adds these properties to the video
  video = mergeProps(video, {
    controls: false,
    src: URL.createObjectURL(mediaStream)
  });
  video.play();
  webcam_stream.appendChild(video);

  },function(failure){
    console.log(failure);
  });
}

function record_audio_and_video(){
    recordRTC_Video.startRecording();
    recordRTC_Audio.startRecording();
  }

function display_msg(id, data, divId){
  //$("#conversation").append("<div class='msg' style='color:"+data.c+"'>"+data.m+"</div>");
  if(data.v){
    // for video element
    
    console.log("id is: " + id);
    console.log("data.r is: " + data.r);

    var video = document.createElement("video");
    video.setAttribute("id", "video" + id);
    video.autoplay = false;
    video.controls = false; // optional
    video.loop = false;
    video.width = 240;

    var source = document.createElement("source");
    source.src =  URL.createObjectURL(base64_to_blob(data.v));
    source.type =  "video/webm";

    video.appendChild(source);

    // for gif instead, use this code below and change mediaRecorder.mimeType in onMediaSuccess below
    //var video = document.createElement("img");
     //video.src = URL.createObjectURL(base64_to_blob(data.v));

     //document.getElementById("conversation").appendChild(video);

    

    var playButton = document.createElement("button");
    var stopButton = document.createElement("button");
    playButton.setAttribute("id", "play" + id);
    stopButton.setAttribute("id", "stop" + id);
    playButton.innerHTML = "Play";
    stopButton.innerHTML = "Pause";

    playButton.onclick = function() {
      var currID = playButton.id.substring(4);
      /*document.getElementById("video" + currID).play();
      document.getElementById("audio" + currID).play(); */
      setTimeout(function(){
        document.getElementById("video" + currID).play();
        setTimeout(function(){
          document.getElementById("audio" + currID).play(); // delay 500 seconds for audio, it worked well on my machine
        },620);
      },500);
    }

    stopButton.onclick = function() {
      var currID = stopButton.id.substring(4);
      document.getElementById("video" + currID).pause();
      document.getElementById("audio" + currID).pause(); 
      /*setTimeout(function() {
        document.getElementById("video" + currID).pause();
        setTimeout(function(){
          document.getElementById("audio" + currID).pause(); // delay 500 seconds for audio, it worked well on my machine
        },500);
      },500);*/
    }

    var div = document.createElement("div");

    var usernameDiv = document.createElement("div");
    usernameDiv.style.color = "white";
    usernameDiv.innerHTML = data.m;
    usernameDiv.setAttribute("class", "video_info")
    usernameDiv.setAttribute("width", "240");
    usernameDiv.style.paddingLeft="0px";
    usernameDiv.style.paddingRight="0px";

    div.appendChild(usernameDiv);
    div.appendChild(video);
    //div.appendChild(playButton);

    /*var buttonsTable = document.createElement("table");
    buttonsTable.setAttribute("width", "240");
    var playRow = document.createElement("tr");
    var playCell = document.createElement("td");
    playCell.appendChild(playButton);
    playRow.appendChild(playCell);
    buttonsTable.appendChild(playRow);*/

    if (data.a) {
      var audioSrc = URL.createObjectURL(base64_to_blob(data.a));
      audioSrc.type= "audio/wav";
      $("#"+divId).append("<audio id='audio" + id + "' src='"+audioSrc+"'></audio>");
    }


    //document.getElementById("conversation").appendChild(playButton);
    //document.getElementById("conversation").appendChild(stopButton);


   

    var rightVideoDiv = document.createElement("div");
    rightVideoDiv.setAttribute("float", "right");
    rightVideoDiv.setAttribute("width", "50px");
    rightVideoDiv.appendChild(playButton);
    rightVideoDiv.appendChild(stopButton);

    div.appendChild(rightVideoDiv);
   $("#"+divId).append(div);

  }
}



function datauri_to_blob(dataURI,callback) {
  var xhr = new XMLHttpRequest();
  xhr.open('GET', dataURI, true);
  xhr.responseType = 'blob';
  xhr.onload = function(e) {
    if (this.status == 200) {
      callback(this.response);
    }
  };
  xhr.send();
}

var blob_to_base64 = function(blob, callback) {
  var reader = new FileReader();
  reader.onload = function() {
    var dataUrl = reader.result;
    var base64 = dataUrl.split(',')[1];
    callback(base64);
  };
  reader.readAsDataURL(blob);
};

var base64_to_blob = function(base64) {
  var binary = atob(base64);
  var len = binary.length;
  var buffer = new ArrayBuffer(len);
  var view = new Uint8Array(buffer);
  for (var i = 0; i < len; i++) {
    view[i] = binary.charCodeAt(i);
  }
  var blob = new Blob([view]);
  return blob;
};

// window.setInterval(function() {
//     updatePlay();
//   }, 5000);




function updatePlay(result) {
  var iframe = document.getElementById('iframe');
  iframe.src = iframe.src;
};





        //////////////////////////
     });
    });
    

}


function send() {
	var newtext = '\n'+ username + ": " + document.myform.addText.value;
	document.myform.conversation.value += newtext;
}






</script>
<!--
 <form name="myform">
 -->
  <div>
    <h2 id="match">Congratulations! <span></span></h2>
  </div>
<!--
	<div>
		<textarea name="conversation" rows="15" cols="50" readonly>Start messaging now!
		</textarea>
    <div>
		  <textarea name="addText" rows="2" cols="50"> </textarea>
    </div>
    <div>
      <button type="button" onclick="goBack();"> Back </button>
		  <input type="button" value="Send" onClick="send();">
    </div>
	</div>
</form> -->

<!-- <div><h4> FireBase One..</h4></div> -->
  <button type="button" onclick="goBack();"> Back </button>
  
  <div>
    <button id="recordBtn">Record</button>
    <button id="stopButton">Stop</button>
  </div>


  <div id="conversation"></div>
  <div id="submission">
    <input type="text" placeholder="say something..">
  </div>
  <div id="webcam_stream"></div>
  <div id="video_container"></div>
  <div id="recommenders" class="hidden">
    {{recommenders}}
  </div>


</body>
</html>